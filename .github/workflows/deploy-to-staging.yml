# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build & Deploy to staging

on:
  workflow_run:
    workflows: [Test]
    types: [completed]
    branches: [main]

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 16
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        cache: 'npm'
    - name: Restore packages
      run: npm ci
    - name: Build production assets
      run: npm run build
    - name: Build Docker image
      run: docker build -t image .
    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Push image
      run: |
        TAG=1.0.${{ github.run_number }}
        IMAGE_ID=ghcr.io/${{ github.repository }}
        docker tag image $IMAGE_ID:$TAG
        docker push $IMAGE_ID:$TAG
        docker tag image $IMAGE_ID:latest
        docker push $IMAGE_ID:latest
    - name: executing remote ssh commands using password
      uses: fifsky/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOSTNAME }}
        user: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        command: |
          cd joladnijo-infra-staging
          git checkout main
          git pull
          docker-compose -f docker-compose.yml -f docker-compose.staging.yml pull
          docker-compose -f docker-compose.yml -f docker-compose.staging.yml up -d
