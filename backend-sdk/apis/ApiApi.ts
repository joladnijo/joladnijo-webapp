/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

/**
 * 
 */
export class ApiApi extends runtime.BaseAPI {

    /**
     * 
     */
    async listprivatesRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<any>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/private`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * 
     */
    async listprivates(initOverrides?: RequestInit): Promise<Array<any>> {
        const response = await this.listprivatesRaw(initOverrides);
        return await response.value();
    }

    /**
     * 
     */
    async listpublicsRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<any>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/public`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * 
     */
    async listpublics(initOverrides?: RequestInit): Promise<Array<any>> {
        const response = await this.listpublicsRaw(initOverrides);
        return await response.value();
    }

    /**
     * 
     */
    async listrestrictedsRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<any>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/restricted`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * 
     */
    async listrestricteds(initOverrides?: RequestInit): Promise<Array<any>> {
        const response = await this.listrestrictedsRaw(initOverrides);
        return await response.value();
    }

}
